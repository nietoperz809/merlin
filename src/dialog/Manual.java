package dialog;

import game.MerlinGame;
import game.Utils;

import javax.swing.*;
import javax.swing.event.HyperlinkEvent;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.text.html.HTML;
import java.awt.*;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.stream.Collectors;

public class Manual extends JFrame {
    private JPanel contentPane;
    private JButton dismissButton;
    private JTextPane textPane1;

    public Manual () {
        setContentPane (contentPane);
        getRootPane ().setDefaultButton (dismissButton);
        dismissButton.addActionListener (e -> dispose ());
    }

    public static void main () {
        Manual dialog = new Manual ();

        StyledDocument doc = dialog.textPane1.getStyledDocument ();
        SimpleAttributeSet center = new SimpleAttributeSet ();
        StyleConstants.setAlignment (center, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes (0, doc.getLength (), center, false);
        dialog.textPane1.setContentType ("text/html");
        dialog.loadPage ("main.html");
        dialog.textPane1.setEditable (false);

        dialog.textPane1.addHyperlinkListener (e -> {
            if (e.getEventType () == HyperlinkEvent.EventType.ACTIVATED) {
                Object attribute = e.getSourceElement ().getAttributes ().getAttribute (HTML.Tag.A);
                String dst = attribute.toString ();
                dst = dst.substring (6, dst.length () - 1);
                switch (dst) {
                    case "TTT":
                        dialog.loadPage ("TicTacToe.html");
                        break;

                    case "BACK":
                        dialog.loadPage ("main.html");
                        break;

                    case "ECH":
                        dialog.loadPage ("Echo.html");
                        break;

                    case "BLA":
                        dialog.loadPage ("BlackJack13.html");
                        break;

                    case "MAG":
                        dialog.loadPage ("MagicSquare.html");
                        break;

                    case "MIN":
                        dialog.loadPage ("MindBender.html");
                        break;

                    case "MUS":
                        dialog.loadPage ("MusicMachine.html");
                        break;
                }
                //System.out.println (dst);
            }
        });

        dialog.pack ();
        dialog.setVisible (true);
        dialog.setResizable (false);
        dialog.setLocationRelativeTo (null);
    }

    private void loadPage (String name) {
        InputStream is = Utils.getResource (name);
        String page = new BufferedReader (new InputStreamReader (is))
                .lines ().collect (Collectors.joining ("\n"));
        textPane1.setText (page);
        textPane1.setCaretPosition (0);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$ ();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$ () {
        contentPane = new JPanel ();
        contentPane.setLayout (new BorderLayout (0, 0));
        contentPane.setMinimumSize (new Dimension (350, 500));
        contentPane.setPreferredSize (new Dimension (350, 500));
        dismissButton = new JButton ();
        dismissButton.setText ("Dismiss");
        contentPane.add (dismissButton, BorderLayout.SOUTH);
        final JScrollPane scrollPane1 = new JScrollPane ();
        scrollPane1.setMinimumSize (new Dimension (400, 500));
        scrollPane1.setPreferredSize (new Dimension (400, 500));
        contentPane.add (scrollPane1, BorderLayout.CENTER);
        textPane1 = new JTextPane ();
        scrollPane1.setViewportView (textPane1);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$ () {
        return contentPane;
    }

}
